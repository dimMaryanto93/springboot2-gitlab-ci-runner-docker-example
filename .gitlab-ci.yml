# To keep cache across branches add 'key: "$CI_JOB_NAME"'
cache:
  paths:
    - .m2/repository

variables:
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"
  MAVEN_CLI_OPTS: "--show-version -s .gitlab-ci_m2.xml"
  PRIVATE_REPOSITORY_PULL: repository.dimas-maryanto.com:8086/

stages:
  - test
  - build
  - deploy
  - publish

# base image for build java using docker image maven
image:
  name: ${PRIVATE_REPOSITORY_PULL}maven:3.6-jdk-8

test:
  stage: test
  # Add service PostgreSQL
  services:
    - name: ${PRIVATE_REPOSITORY_PULL}postgres:12.3
      alias: postgres-db
  variables:
    POSTGRES_DB: test_data
    POSTGRES_USER: test_user
    POSTGRES_PASSWORD: test_user
    # hostname for service postgresql is ref to service.alias
    DATABASE_HOST: postgres-db
  before_script:
    - mvn $MAVEN_CLI_OPTS versions:set -DnewVersion=$CI_COMMIT_TAG
  script:
    - mvn $MAVEN_CLI_OPTS clean test
  tags:
    - docker
  only:
    - /-release$/

packaging:
  stage: build
  before_script:
    - mvn $MAVEN_CLI_OPTS versions:set -DnewVersion=$CI_COMMIT_TAG
  script:
    - mvn $MAVEN_CLI_OPTS clean package -DskipTests
  artifacts:
    paths:
      - target/*.jar
    name: $CI_PROJECT_PATH_SLUG-$CI_COMMIT_TAG
  tags:
    - docker
  only:
    - /-release$/

docker-publish:
  stage: publish
  # Enabled to call docker command inside container from docker image maven:3.6-jdk-8
  services:
    - name: ${PRIVATE_REPOSITORY_PULL}docker:19.03.12-dind
  variables:
    DOCKER_TLS_CERTDIR: ""
  environment:
    name: development
  before_script:
    - mvn ${MAVEN_CLI_OPTS} versions:set -DnewVersion=$CI_COMMIT_TAG
  script:
    - mvn ${MAVEN_CLI_OPTS} dockerfile:build dockerfile:push
  tags:
    - docker
  only:
    - /-release$/
